generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum FitnessGoal {
  BULKING
  CUTTING
  MAINTAINING
}

enum Gender {
  MALE
  FEMALE
}

enum FitnessLevel {
  SEDENTARY
  LIGHT
  MODERATE
  ACTIVE
  VERY_ACTIVE
}

enum PlanStatus {
  ACTIVE
  DONE
}

model User {
  id               String       @id @default(uuid())
  username         String       @unique
  email            String       @unique
  password         String
  weight           Float
  fitnessGoal      FitnessGoal
  gender           Gender
  fitnessLevel     FitnessLevel
  favoriteCuisines String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Ingredient Ingredient[]
  MealPlan   MealPlan[]

  Favorite Favorite[]
}

model Ingredient {
  id     String @id @default(uuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  name     String
  quantity Float
  unit     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([userId, name])
}

model MealPlan {
  id        String     @id @default(cuid())
  userId    String
  name      String
  status    PlanStatus @default(ACTIVE)
  planJson  Json
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  user     User       @relation(fields: [userId], references: [id])
  Favorite Favorite[]

  @@index([userId, status])
}

model Favorite {
  id        String   @id @default(uuid())
  userId    String
  planId    String
  createdAt DateTime @default(now())

  user User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  plan MealPlan @relation(fields: [planId], references: [id], onDelete: Cascade)

  @@unique([userId, planId]) // one favourite per user/plan
}
